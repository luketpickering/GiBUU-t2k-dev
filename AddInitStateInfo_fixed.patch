--- release1.6/code/analysis/neutrinoAnalysis.f90	2015-10-28 17:50:35.474293347 +0000
+++ release1.6/code/analysis/neutrinoAnalysis.f90	2015-10-23 14:43:12.526986793 +0100
@@ -1086,7 +1086,7 @@
     type(particle)         , POINTER :: particlePointer
     integer :: i,j,first
 
-    type(particle), Allocatable, dimension(:),target :: lepton
+    type(particle), Allocatable, dimension(:),target :: lepton, struckNuc
 
     integer, parameter :: max_generation=3
     integer :: generation, prod_id
@@ -1157,7 +1157,7 @@
     type(histogram2D), save :: H_enu_rec_versus_real(1:max_speEvent,0:max_Hist)
 
     real :: Enureal, Enurec, Q2real, Q2rec, dummy, perweight
-    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom ! momenta of the ingoing and outgoing lepton and intermediate boson
+    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom, nuc_mom ! momenta of the ingoing and outgoing lepton and intermediate boson
     integer :: m,iHist
 
 
@@ -1721,7 +1721,7 @@
           if(bound(particles(i,j))) cycle
           if(below_threshold(particles(i,j))) cycle
 
-          if(.not.neutrinoProdInfo_Get(Particles(i,j)%firstEvent,prod_id,dummy,lepIn_mom,lep_mom,boson_mom)) then
+          if(.not.neutrinoProdInfo_Get(Particles(i,j)%firstEvent,prod_id,dummy,lepIn_mom,lep_mom,boson_mom, nuc_mom)) then
              write(*,*) 'error in getting production info, stop'
              stop
           end if
@@ -1875,7 +1875,10 @@
     write(*,*) 'firstevent range: ', firstevents
 
     Allocate(lepton(firstEvents(1):firstEvents(2)))
+    Allocate(struckNuc(firstEvents(1):firstEvents(2)))
+
     call setToDefault(lepton)
+    call setToDefault(struckNuc)
 
     Allocate(Events(firstEvents(1):firstEvents(2)))
     Allocate(Events_QE(firstEvents(1):firstEvents(2)))
@@ -1909,7 +1912,7 @@
     do i=firstEvents(1),firstEvents(2)
        lepton(i)%firstEvent=i
        call get_init_namelist(outLepton_ID=lepton(i)%ID, outLepton_charge=lepton(i)%charge)
-       if(.not.neutrinoProdInfo_Get(i, prod_id, lepton(i)%perweight,lepIn_mom,lepton(i)%momentum,boson_mom)) then
+       if(.not.neutrinoProdInfo_Get(i, prod_id, lepton(i)%perweight,lepIn_mom,lepton(i)%momentum, boson_mom, struckNuc(i)%momentum)) then
           write(*,*) 'error in getting perweight, stop, lepton'
           stop
        end if
@@ -1922,6 +1925,9 @@
 
        call event_add(events(i),particlePointer)
 
+       particlePointer=>struckNuc(i)
+
+       call event_add(events(i),particlePointer)
 
        select case (prod_id)
        case(1)
@@ -1971,7 +1977,7 @@
 
           !apply history information
           generation=history_getGeneration(Particles(i,j)%history)
-          if(.not.neutrinoProdInfo_Get(Particles(i,j)%firstEvent,prod_id,dummy,lepIn_mom,lep_mom,boson_mom)) then
+          if(.not.neutrinoProdInfo_Get(Particles(i,j)%firstEvent,prod_id,dummy,lepIn_mom,lep_mom,boson_mom,nuc_mom)) then
              write(*,*) 'error in getting production info, stop'
              stop
           end if
@@ -2844,7 +2850,7 @@
     if(reconstruct_neutrino_energy .and. specificEvent_Analysis) then
 
     do j=lBound(events,dim=1),uBound(events,dim=1)
-          if(.not.neutrinoProdInfo_Get(j,prod_id,perweight,lepIn_mom,lep_mom,boson_mom)) then
+          if(.not.neutrinoProdInfo_Get(j,prod_id,perweight,lepIn_mom,lep_mom,boson_mom,nuc_mom)) then
              write(*,*) 'error in getting perweight, stop'
              write(*,*) j,prod_id,perweight
              stop
--- release1.6/code/analysis/LesHouchesAnalysis.f90	2015-10-28 17:50:35.482959397 +0000
+++ release1.6/code/analysis/LesHouchesAnalysis.f90	2015-10-23 13:49:29.529981735 +0100
@@ -469,7 +469,7 @@
 
     real :: weight,nu,Q2,eps,phiL
     integer :: evtType
-    real,dimension(0:3) :: momLepIn, momLepOut, momBos
+    real,dimension(0:3) :: momLepIn, momLepOut, momBos, nuc_mom
 
     select case (eventType)
     case (heavyIon)
@@ -478,8 +478,8 @@
       write(iFile,'(A,ES13.4)') '# 300 ', b_had
     case (neutrino)
       if (.not. present(iFE)) return
-      if (NeutrinoProdInfo_Get (iFE,evtType,Weight,momLepIn,momLepOut,momBos)) &
-        write(iFile,'(A,I5,1P,e18.10,1P,2(" ",4e18.10),0P)') '# 5 ', evtType, Weight, momLepIn, momLepOut
+      if (NeutrinoProdInfo_Get (iFE,evtType,Weight,momLepIn,momLepOut,momBos,nuc_mom)) &
+        write(iFile,'(A,I5,1P,e18.10,1P,3(" ",4e18.10),0P,A)') '# 5 ', evtType, Weight, momLepIn, momLepOut, nuc_mom
     case (hiLepton)
       if (.not. present(iFE)) return
       if (EventInfo_HiLep_Get (0,iFE,Weight,nu,Q2,eps,evtType,phi_Lepton=phiL)) &
--- release1.6/code/analysis/AnaEvent.f90	2015-10-28 17:50:35.842600481 +0000
+++ release1.6/code/analysis/AnaEvent.f90	2015-10-23 13:49:09.239821771 +0100
@@ -1863,7 +1863,7 @@
     character(80) :: filename_Enu, filename_E,filename_cos,filename_Q2
     character(13) :: name
     real :: enu,  ekin, costheta, Q2, perweight
-    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom
+    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom, nuc_mom
     logical ::  makeInitHists, pass
 
     logical :: makeOutput,sameFileName
@@ -1938,7 +1938,7 @@
        end if
 
        if (pass) then
-          if(.not.neutrinoProdInfo_Get(j,prod_id,perweight,lepIn_mom,lep_mom,boson_mom)) then
+          if(.not.neutrinoProdInfo_Get(j,prod_id,perweight,lepIn_mom,lep_mom,boson_mom,nuc_mom)) then
              write(*,*) 'error in getting perweight, stop'
              write(*,*) j,prod_id,perweight
              stop
@@ -2148,7 +2148,7 @@
     character(35),parameter :: outA='("#",A6,3A9,8A16,A15,A18,A8)'
     integer :: i,prod_ID
     real :: perweight, enu
-    real, dimension(0:3) :: lepIn_mom, lepton_mom, boson_mom
+    real, dimension(0:3) :: lepIn_mom, lepton_mom, boson_mom, nuc_mom
     logical :: newline,onlyFree,printParticle,ex,NeutrinoProdID
 
     if(present(onlyFreeParticles)) then
@@ -2192,7 +2192,7 @@
           end if
 
           if(NeutrinoProdID) then
-             if(.not.neutrinoProdInfo_Get(i,prod_id,perweight,lepIn_mom,lepton_mom,boson_mom)) then
+             if(.not.neutrinoProdInfo_Get(i,prod_id,perweight,lepIn_mom,lepton_mom,boson_mom,nuc_mom)) then
                 write(*,*) 'error in getting production info in event_dump, stop'
                 stop
              end if
@@ -2728,7 +2728,7 @@
     type(tParticleListNode),Pointer       :: pNode
     integer :: prod_id
     real    :: Ehad, perweight
-    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom
+    real, dimension(0:3) :: lepIn_mom, lep_mom, boson_mom, nuc_mom
     integer :: i, iHist
     integer, save :: numRuns
 
@@ -2771,7 +2771,7 @@
 
        ! (1) Collect informations about boson in event "i"
        ! event:  prod_ID (1 to 34) , perweight, outgoing lepton and intermediate boson momenta
-       if(.not.neutrinoProdInfo_Get(i,prod_id,perweight,lepIn_mom,lep_mom,boson_mom)) then
+       if(.not.neutrinoProdInfo_Get(i,prod_id,perweight,lepIn_mom,lep_mom,boson_mom,nuc_mom)) then
           write(*,*) 'error in getting production info, stop'
           stop
        end if
--- release1.6/code/init/neutrino/initNeutrino.f90	2015-10-28 17:50:39.403263861 +0000
+++ release1.6/code/init/neutrino/initNeutrino.f90	2015-10-23 13:51:36.543723220 +0100
@@ -681,7 +681,6 @@
 
           sigma=0.
 
-
           if (MCmode) call SetXsecMC(eNev1,flux_enu,nuXsectionMode)
 
           !          call write_electronNucleon_event(eNev1)
@@ -843,7 +842,8 @@
           call neutrinoProdInfo_Store(firstEvent, k, fak1,&
                eNev(k)%lepton_in%momentum,&
                eNev(k)%lepton_out%momentum,&
-               eNev(k)%boson%momentum)
+               eNev(k)%boson%momentum,&
+               eNev(k)%nucleon_free%momentum)
 
           iHist = K2Hist(k)
 
--- release1.6/code/init/neutrino/neutrinoProdInfo.f90	2015-10-28 17:50:39.404347117 +0000
+++ release1.6/code/init/neutrino/neutrinoProdInfo.f90	2015-10-23 13:47:24.396162419 +0100
@@ -24,6 +24,7 @@
      real,dimension(0:3)    :: mom_lepIn=0.
      real,dimension(0:3)    :: mom_lepOut=0.
      real,dimension(0:3)    :: mom_bos=0.
+     real,dimension(0:3)    :: mom_nuc=0.
   end type tneutrinoProdInfo
   !
   ! PURPOSE
@@ -82,7 +83,10 @@
     nuProdInfo%mom_Bos(1) = 0.
     nuProdInfo%mom_Bos(2) = 0.
     nuProdInfo%mom_Bos(3) = 0.
-
+    nuProdInfo%mom_nuc(0) = 0.
+    nuProdInfo%mom_nuc(1) = 0.
+    nuProdInfo%mom_nuc(2) = 0.
+    nuProdInfo%mom_nuc(3) = 0.
   end subroutine NeutrinoProdInfo_Init
 
 
@@ -105,7 +109,7 @@
   ! OUTPUT
   ! ---
   !********************************************************************
-  subroutine neutrinoProdInfo_Store(i,prod_id,perweight,Mom_LepIn,Mom_LepOut,Mom_Bos)
+  subroutine neutrinoProdInfo_Store(i,prod_id,perweight,Mom_LepIn,Mom_LepOut,Mom_Bos,Mom_Nuc)
 
     integer,intent(in)             :: i
     integer,intent(in)             :: prod_id
@@ -113,6 +117,7 @@
     real,dimension(0:3),intent(in) :: Mom_LepIn
     real,dimension(0:3),intent(in) :: Mom_LepOut
     real,dimension(0:3),intent(in) :: Mom_Bos
+    real,dimension(0:3),intent(in) :: Mom_Nuc
 
     nuProdInfo(i)%flagOK=.true.
     nuProdInfo(i)%prod_id=prod_id
@@ -120,6 +125,7 @@
     nuProdInfo(i)%mom_LepIn=mom_LepIn
     nuProdInfo(i)%mom_LepOut=mom_LepOut
     nuProdInfo(i)%mom_Bos=mom_Bos
+    nuProdInfo(i)%mom_nuc=Mom_Nuc
 
   end subroutine NeutrinoProdInfo_Store
 
@@ -142,7 +148,7 @@
   ! * real,dimension(0:3)    :: Mom_LepOut
   ! * real,dimension(0:3)    :: Mom_Bos
   !********************************************************************
-  logical function neutrinoProdInfo_Get(i,prod_id,perweight,Mom_LepIn,Mom_LepOut,Mom_Bos)
+  logical function neutrinoProdInfo_Get(i,prod_id,perweight,Mom_LepIn,Mom_LepOut,Mom_Bos, Mom_Nuc)
 
     integer,intent(in)              :: i
     integer,intent(out)             :: prod_id
@@ -150,6 +156,7 @@
     real,dimension(0:3),intent(out) :: Mom_LepIn
     real,dimension(0:3),intent(out) :: Mom_LepOut
     real,dimension(0:3),intent(out) :: Mom_Bos
+    real,dimension(0:3),intent(out) :: Mom_Nuc
 
 
     neutrinoProdInfo_Get = .FALSE.
@@ -161,6 +168,7 @@
     mom_LepIn=nuProdInfo(i)%mom_LepIn
     mom_LepOut=nuProdInfo(i)%mom_LepOut
     mom_Bos=nuProdInfo(i)%mom_Bos
+    mom_Nuc=nuProdInfo(i)%mom_Nuc
 
     neutrinoProdInfo_Get = nuProdInfo(i)%flagOK
 
@@ -183,9 +191,9 @@
 
     integer              :: prod_id
     real                 :: perweight
-    real,dimension(0:3)  :: mom_LepIn, mom_LepOut,mom_Bos
+    real,dimension(0:3)  :: mom_LepIn, mom_LepOut,mom_Bos, mom_Nuc
 
-    if (neutrinoProdInfo_Get(i,prod_id,perweight,mom_LepIn,mom_LepOut,mom_Bos)) then
+    if (neutrinoProdInfo_Get(i,prod_id,perweight,mom_LepIn,mom_LepOut,mom_Bos, mom_Nuc)) then
        write(*,'("** neutrinoProdInfo(",i7,")    prod_id=",i7,"   perweight=",1P,e13.4,0P)') i,prod_id,perweight
 
     else
